AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Resources:
  ApiGatewayRestApiDosificacion:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      EndpointConfiguration:
        Types:
        - EDGE
      Name: lambda-api
  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApiDosificacion
        - RootResourceId
      PathPart: lambda
      RestApiId:
        Ref: ApiGatewayRestApiDosificacion
  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        ConnectionType: INTERNET
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DosificacionLambdaFunction.Arn}/invocations
      OperationName: lambda
      ResourceId:
        Ref: ApiGatewayResource
      RestApiId:
        Ref: ApiGatewayRestApiDosificacion
  ApiGatewayModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      RestApiId:
        Ref: ApiGatewayRestApiDosificacion
      Schema: {}
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: ApiGatewayDeployment
      Description: Lambda API Stage v0
      RestApiId:
        Ref: ApiGatewayRestApiDosificacion
      StageName: v0
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      Description: Lambda API Deployment
      RestApiId:
        Ref: ApiGatewayRestApiDosificacion
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:*
            Resource:
              Fn::GetAtt:
              - DosificacionLambdaFunction
              - Arn
  DosificacionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DosificacionLambdaRole
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
  DosificacionLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DosificacionLambdaFunction
      Role:
        Fn::GetAtt:
        - DosificacionLambdaRole
        - Arn
      Runtime: python3.7
      Handler: dosificacion/dosificacion.lambda_handler
      CodeUri: s3://mycode-plandaeta/d646fb052588900cfe7a7cd1ac57cf4c
