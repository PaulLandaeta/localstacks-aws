AWSTemplateFormatVersion: '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  HashKeyElementName:
    Type: String
    Default: Id_dosificacion
    Description: Hash Key Name
  HashKeyElementType:
    Type: String
    Default: S
    Description: Hash Key Type
  StandardQueueName:
    Type: String
    Description: Standard Queue Name
    Default: DemoStandardQueue

Resources:

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${InvoiceLambda}"
      RetentionInDays: 7
  
  LambdaLogPermissions:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - !Ref FacturacionLambdaRole
      PolicyName: !Sub "${AWS::Region}-LambdaLogGroup"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${InvoiceLambda}"
          - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${InvoiceLambda}:*"
          - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${InvoiceLambda}:*:*"

  ApiGatewayRestApiDosificacion:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      EndpointConfiguration:
        Types:
          - EDGE
      Name: dosificacion
  
  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApiDosificacion.RootResourceId
      PathPart: 'lambda'
      RestApiId: !Ref ApiGatewayRestApiDosificacion
  
  ApiGatewayRestApiFacturacion:
    Type: AWS::ApiGateway::RestApi
    Properties:
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration for
      EndpointConfiguration:
        Types:
          - EDGE
      Name: facturacion

  ApiGatewayResourceFacturacion:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApiFacturacion.RootResourceId
      PathPart: 'facturacion'
      RestApiId: !Ref ApiGatewayRestApiFacturacion
  
  ApiGatewayMethodFacturacion:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt ApiGatewayIamRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FacturacionLambdaFunction.Arn}/invocations'
      OperationName: 'facturacion'
      ResourceId: !Ref ApiGatewayResourceFacturacion
      RestApiId: !Ref ApiGatewayRestApiFacturacion

  FacturacionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: facturacion-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: facturacion-lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:ReceiveMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                  - sqs:GetQueueUrl
                  - sqs:CreateQueue
                Resource:
                  - !Sub 'arn:aws:sqs:us-east-1:556356385512:DemoStandardQueue'
              
  FacturacionLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: FacturacionLambdaFunction
      Role: !GetAtt FacturacionLambdaRole.Arn
      Runtime: python3.7
      Handler: 'facturacion/facturacion.lambda_handler'
      CodeUri: ./src
  
  ApiGatewayModelFacturacion:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref ApiGatewayRestApiFacturacion
      Schema: {}

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ApiGatewayDeploymentFacturacion
      Description: Lambda API Stage v0
      RestApiId: !Ref ApiGatewayRestApiFacturacion
      StageName: 'v0'

  ApiGatewayDeploymentFacturacion:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethodFacturacion
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref ApiGatewayRestApiFacturacion

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt ApiGatewayIamRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DosificacionLambdaFunction.Arn}/invocations'
      OperationName: 'lambda'
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApiDosificacion
  
  ApiGatewayMethodGET:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt ApiGatewayIamRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DosificacionLambdaFunction.Arn}/invocations'
      OperationName: 'lambda'
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApiDosificacion

  ApiGatewayModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref ApiGatewayRestApiDosificacion
      Schema: {}

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ApiGatewayDeployment
      Description: Lambda API Stage v0
      RestApiId: !Ref ApiGatewayRestApiDosificacion
      StageName: 'v0'

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref ApiGatewayRestApiDosificacion
   
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lambda:*'
                Resource: 
                  - !GetAtt DosificacionLambdaFunction.Arn
                  - !GetAtt FacturacionLambdaFunction.Arn
              - Effect: 'Allow'
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:ReceiveMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                  - sqs:CreateQueue
                Resource:
                  - !Sub 'arn:aws:sqs:us-east-1:556356385512:DemoStandardQueue'

  LambdaPolicyDynamo:
    Type: AWS::IAM::ManagedPolicy
    Properties:
        PolicyDocument:
            Version: 2012-10-17
            Statement:
                -
                  Effect: Allow
                  Action:
                      - dynamodb:PutItem
                      - dynamodb:UpdateItem
                      - dynamodb:GetItem
                      - dynamodb:*
                  Resource:
                      - "*"

  DosificacionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref LambdaPolicyDynamo       
      RoleName: DosificacionLambdaRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

  DosificacionLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DosificacionLambdaFunction
      Role: !GetAtt DosificacionLambdaRole.Arn
      Runtime: python3.7
      Handler: 'dosificacion/dosificacion.lambda_handler'
      CodeUri: ./src

  EmployeeTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Dosificacion
      AttributeDefinitions:
        - 
          AttributeName: !Ref HashKeyElementName
          AttributeType: !Ref HashKeyElementType
      KeySchema:
        - 
          AttributeName: !Ref HashKeyElementName
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  MyStandardQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: !Ref StandardQueueName 

  InvoiceLambda: 
      Type: AWS::Serverless::Function
      Properties:
        CodeUri: ./src
        Handler: 'mail/mail.lambda_handler'
        Runtime: python3.8
        Timeout: 30
        FunctionName: invoice-mail-process
        MemorySize: 512
        Role: !GetAtt FacturacionLambdaRole.Arn
        Events:
          MyStandardQueue:
            Type: SQS
            Properties:
              Queue: !Sub 'arn:aws:sqs:us-east-1:556356385512:DemoStandardQueue'
              BatchSize: 10

Outputs:
  Dosificacion:
    Description: Table Created using this template.
    Value: !Ref EmployeeTable
  StandardQueueURL:
    Description: Queue URL for standard queue
    Value: !Ref MyStandardQueue
